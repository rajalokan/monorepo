name: Deploy
run-name: Deploying ${{ inputs.service }} service(s) to ${{ inputs.environment }} by @${{ github.actor }}

on:
  workflow_dispatch:
    inputs:
      environment:
        required: true
        type: choice
        description: "The target environment for deployment"
        options:
          - dev
          - staging
          - test
          - production
        default: "dev"
      service:
        required: true
        type: choice
        description: Choose the service to deploy
        options:
          - All
          - Audit
          - Backup
          - API
          - Database
          - Notification
          - Reporting        

jobs:
  audit:
    name: Audit
    if: inputs.service == 'All' || inputs.service == 'Audit'
    uses: ./.github/workflows/deploy-individual-service.yml
    with:
      service: audit
      environment: ${{ inputs.environment }}
  
  backup:
    name: Backup
    if: inputs.service == 'All' || inputs.service == 'Backup'
    uses: ./.github/workflows/deploy-individual-service.yml
    with:
      service: backup
      environment: ${{ inputs.environment }}

  api:
    name: API
    if: inputs.service == 'All' || inputs.service == 'API'
    uses: ./.github/workflows/deploy-individual-service.yml
    with:
      service: api
      environment: ${{ inputs.environment }}

  database:
    name: Database
    if: inputs.service == 'All' || inputs.service == 'Database'
    uses: ./.github/workflows/deploy-individual-service.yml
    with:
      service: database
      environment: ${{ inputs.environment }}

  notification:
    name: Notification
    if: inputs.service == 'All' || inputs.service == 'Notification'
    uses: ./.github/workflows/deploy-individual-service.yml
    with:
      service: notification
      environment: ${{ inputs.environment }}
      
  reporting:
    name: Reporting
    if: inputs.service == 'All' || inputs.service == 'Reporting'
    uses: ./.github/workflows/deploy-individual-service.yml
    with:
      service: reporting
      environment: ${{ inputs.environment }}
