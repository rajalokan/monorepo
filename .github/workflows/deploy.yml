name: Server

on:
  workflow_call:
    inputs:
      service:
        required: true
        type: string
      environment:
        required: true
        type: string

jobs:
  deploy:
    name: ${{ inputs.environment }}
    runs-on: ubuntu-latest
    environment:
      name: ${{ inputs.environment }}
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4    

      - name: Print all env variables
        env:
          ENV_VARS: ${{ toJSON(env) }}
        run: |
          echo ${ENV_VARS}

      - name: Print all vars
        env:
          ENV_VARS: ${{ toJSON(vars) }}
        run: |
          echo ${ENV_VARS}

      - name: Stringify env variables
        id: stringify
        env:
          ENV_VARS: ${{ toJSON(vars) }}
        run: |
          echo ${ENV_VARS} | jq -R
          echo "vars_json=$(echo ${ENV_VARS} | jq -R)" >> "$GITHUB_OUTPUT"                
          
      - name: Set up service level environment variables
        uses: ./.github/actions/setup-env
        with:
          vars_json: ${{ steps.stringify.outputs.vars_json }}
          service_name: SERVER        
          
      - name: Print all env variables
        env:
          ENV_VARS: ${{ toJSON(env) }}
        run: |
          echo ${ENV_VARS}

      - name: Configure AWS credentials
        run: |
          echo ${{ env.AWS_ACCOUNT_ID }}

      - name: Deploy service
        uses: ./.github/actions/deploy-service
        
      # # - name: Set up common environment variables
      # #   uses: ./.github/actions/setup-env
      
      # - name: Dump vars context
      #   env:
      #     VARS_JSON: ${{ toJSON(env) }}
      #   run: |
      #     echo "${VARS_JSON}"    

      # - name: Configure AWS credentials
      #   run: echo "Assuming role ${{ vars.AWS_ACCOUNT_ID }}:role/${{ vars.AWS_ROLE_NAME }} in ${{ vars.AWS_REGION }}"

      # - name: Login to Amazon ECR
      #   run: echo "Login to AWS ECR"

      # - name: Build, tag, and push sidecar image to ECR
      #   env:
      #     REGISTRY: rajalokan
      #     REPOSITORY: ${{ vars.APP_NAME }}-nginx-${{ inputs.environment }}
      #   run: |
      #     echo "docker build -t $REGISTRY/$REPOSITORY:latest nginx/"
      #     echo "docker push $REGISTRY/$REPOSITORY:latest"
          
      # - name: Build, tag, and push app image to ECR
      #   env:
      #     REGISTRY: rajalokan
      #     REPOSITORY: ${{ vars.APP_NAME }}-web-app-${{ inputs.environment }}
      #   run: |
      #     echo "docker build -t $REGISTRY/$REPOSITORY:latest nginx/"
      #     echo "docker push $REGISTRY/$REPOSITORY:latest"          
      
      # - name: Update ECS Task Definition
      #   run: |
      #     echo "aws ecs describe-task-definition \
      #       --task-definition ${{ vars.APP_NAME }}-${{ inputs.environment }} \
      #       --region ${{ vars.AWS_REGION }}"
      
      # - name: Update ECS Service
      #   run: |
      #     echo "aws ecs update-service \
      #       --cluster ${{ vars.APP_NAME }}-${{ env.CLUSTER_ENV }}${{ vars.CLUSTER_SUFFIX }} \
      #       --service ${{ vars.APP_NAME }}-${{ inputs.environment }} \
      #       --task-definition ${{ vars.APP_NAME }}-${{ inputs.environment }}:${{ env.TASK_REVISION }} \
      #       --desired-count 4"          
